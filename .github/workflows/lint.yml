name: Lint and Generate Assets

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install deps
        run: npm install
      - name: Run remark
        run: npx remark . --frail
      - name: Run markdownlint
        run: npx markdownlint "**/*.md" --ignore node_modules
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Python dependencies
        run: pip install frontmatter
      - name: Generate flashcards
        run: python scripts/export_flashcards_json.py
      - name: Validate flashcards format
        run: |
          python -c "
          import json
          import re
          
          # Load flashcards
          with open('docs/artifacts/flashcards.json', 'r') as f:
              cards = json.load(f)
          print(f'Found {len(cards)} flashcards')
          
          # Validate card format
          for card in cards:
              if 'q' not in card or 'a' not in card or 'category' not in card:
                  print(f'Invalid card format: {card}')
                  exit(1)
          print('All flashcards have valid format')
          
          # Extract categories from flashcards
          flashcard_categories = set(card['category'] for card in cards)
          print(f'Categories in flashcards: {sorted(flashcard_categories)}')
          
          # Extract deck options from HTML
          with open('docs/index.html', 'r') as f:
              html_content = f.read()
          deck_options = re.findall(r'<option value=\"([^\"]+)\">', html_content)
          deck_categories = set(opt for opt in deck_options if opt != 'all')
          print(f'Deck options in HTML: {sorted(deck_categories)}')
          
          # Validate that all flashcard categories are in deck options
          missing_in_html = flashcard_categories - deck_categories
          if missing_in_html:
              print(f'ERROR: Categories in flashcards but not in HTML: {missing_in_html}')
              exit(1)
          
          print('âœ… All flashcard categories have corresponding deck options')
          "

      - name: Commit generated flashcards
        if: github.event_name == 'push'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -f docs/artifacts/flashcards.json
          if ! git diff --staged --quiet; then
            TOTAL_CARDS=$(grep -c '"category"' docs/artifacts/flashcards.json)
            git commit -m "Auto-generate flashcards from notes

            - Updated ${TOTAL_CARDS} total flashcards
            - Generated from algorithm, devops, and system-design notes" || echo "No changes to commit"
          else
            echo "No flashcard changes to commit"
          fi
